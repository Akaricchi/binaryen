/*
 * Copyright 2020 WebAssembly Community Group participants
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//=============================================================================
// This is an AUTOGENERATED file, even though it looks human-readable! Do not
// edit it by hand, instead edit the generator, gen-exprs.py
//
// You can and should treat it like human-written code in all other ways,
// though, like reviewing it in a PR, etc.
//=============================================================================

ReturnType visitNop(Nop* curr) { return ReturnType(); }
ReturnType visitBlock(Block* curr) { return ReturnType(); }
ReturnType visitIf(If* curr) { return ReturnType(); }
ReturnType visitLoop(Loop* curr) { return ReturnType(); }
ReturnType visitBreak(Break* curr) { return ReturnType(); }
ReturnType visitSwitch(Switch* curr) { return ReturnType(); }
ReturnType visitCall(Call* curr) { return ReturnType(); }
ReturnType visitCallIndirect(CallIndirect* curr) { return ReturnType(); }
ReturnType visitLocalGet(LocalGet* curr) { return ReturnType(); }
ReturnType visitLocalSet(LocalSet* curr) { return ReturnType(); }
ReturnType visitGlobalGet(GlobalGet* curr) { return ReturnType(); }
ReturnType visitGlobalSet(GlobalSet* curr) { return ReturnType(); }
ReturnType visitLoad(Load* curr) { return ReturnType(); }
ReturnType visitStore(Store* curr) { return ReturnType(); }
ReturnType visitAtomicRMW(AtomicRMW* curr) { return ReturnType(); }
ReturnType visitAtomicCmpxchg(AtomicCmpxchg* curr) { return ReturnType(); }
ReturnType visitAtomicWait(AtomicWait* curr) { return ReturnType(); }
ReturnType visitAtomicNotify(AtomicNotify* curr) { return ReturnType(); }
ReturnType visitAtomicFence(AtomicFence* curr) { return ReturnType(); }
ReturnType visitSIMDExtract(SIMDExtract* curr) { return ReturnType(); }
ReturnType visitSIMDReplace(SIMDReplace* curr) { return ReturnType(); }
ReturnType visitSIMDShuffle(SIMDShuffle* curr) { return ReturnType(); }
ReturnType visitSIMDTernary(SIMDTernary* curr) { return ReturnType(); }
ReturnType visitSIMDShift(SIMDShift* curr) { return ReturnType(); }
ReturnType visitSIMDLoad(SIMDLoad* curr) { return ReturnType(); }
ReturnType visitMemoryInit(MemoryInit* curr) { return ReturnType(); }
ReturnType visitDataDrop(DataDrop* curr) { return ReturnType(); }
ReturnType visitMemoryCopy(MemoryCopy* curr) { return ReturnType(); }
ReturnType visitMemoryFill(MemoryFill* curr) { return ReturnType(); }
ReturnType visitConst(Const* curr) { return ReturnType(); }
ReturnType visitUnary(Unary* curr) { return ReturnType(); }
ReturnType visitBinary(Binary* curr) { return ReturnType(); }
ReturnType visitSelect(Select* curr) { return ReturnType(); }
ReturnType visitDrop(Drop* curr) { return ReturnType(); }
ReturnType visitReturn(Return* curr) { return ReturnType(); }
ReturnType visitMemorySize(MemorySize* curr) { return ReturnType(); }
ReturnType visitMemoryGrow(MemoryGrow* curr) { return ReturnType(); }
ReturnType visitUnreachable(Unreachable* curr) { return ReturnType(); }
ReturnType visitPop(Pop* curr) { return ReturnType(); }
ReturnType visitRefNull(RefNull* curr) { return ReturnType(); }
ReturnType visitRefIsNull(RefIsNull* curr) { return ReturnType(); }
ReturnType visitRefFunc(RefFunc* curr) { return ReturnType(); }
ReturnType visitRefEq(RefEq* curr) { return ReturnType(); }
ReturnType visitTry(Try* curr) { return ReturnType(); }
ReturnType visitThrow(Throw* curr) { return ReturnType(); }
ReturnType visitRethrow(Rethrow* curr) { return ReturnType(); }
ReturnType visitBrOnExn(BrOnExn* curr) { return ReturnType(); }
ReturnType visitTupleMake(TupleMake* curr) { return ReturnType(); }
ReturnType visitTupleExtract(TupleExtract* curr) { return ReturnType(); }
ReturnType visitI31New(I31New* curr) { return ReturnType(); }
ReturnType visitI31Get(I31Get* curr) { return ReturnType(); }
ReturnType visitRefTest(RefTest* curr) { return ReturnType(); }
ReturnType visitRefCast(RefCast* curr) { return ReturnType(); }
ReturnType visitBrOnCast(BrOnCast* curr) { return ReturnType(); }
ReturnType visitRttCanon(RttCanon* curr) { return ReturnType(); }
ReturnType visitRttSub(RttSub* curr) { return ReturnType(); }
ReturnType visitStructNew(StructNew* curr) { return ReturnType(); }
ReturnType visitStructGet(StructGet* curr) { return ReturnType(); }
ReturnType visitStructSet(StructSet* curr) { return ReturnType(); }
ReturnType visitArrayNew(ArrayNew* curr) { return ReturnType(); }
ReturnType visitArrayGet(ArrayGet* curr) { return ReturnType(); }
ReturnType visitArraySet(ArraySet* curr) { return ReturnType(); }
ReturnType visitArrayLen(ArrayLen* curr) { return ReturnType(); }